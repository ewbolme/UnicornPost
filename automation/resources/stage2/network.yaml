AWSTemplateFormatVersion: '2010-09-09'

Resources:
  vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/20"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "unicorn-vpc"


  publicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref "vpc"
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone: !Sub "${AWS::Region}a"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "publicSubnet1"


  privateSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref "vpc"
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: !Sub "${AWS::Region}b"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "privateSubnet1"


  privateSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref "vpc"
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: !Sub "${AWS::Region}c"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "privateSubnet2"


  privateSubnet3:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref "vpc"
      CidrBlock: "10.0.3.0/24"
      AvailabilityZone: !Sub "${AWS::Region}d"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "privateSubnet3"


  internetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "unicorn-igw"

  
  natGatewayEIP:
    Type: "AWS::EC2::EIP"
    DependsOn: "attachGateway"
    Properties:
      Domain: "vpc"


  natGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt "natGatewayEIP.AllocationId"
      SubnetId: !Ref "publicSubnet1"
      Tags: 
        - 
          Key: "Name"
          Value: "unicorn-nat-gateway"


  attachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref "vpc"
      InternetGatewayId: !Ref "internetGateway"


  publicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref "vpc"
      Tags:
        - Key: "Name"
          Value: "publicRouteTable"


  privateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref "vpc"
      Tags:
        - Key: "Name"
          Value: "privateRouteTable"


  publicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: "attachGateway"
    Properties:
      RouteTableId: !Ref "publicRouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref "internetGateway"

  
  privateRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref "privateRouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref "natGateway"


  subnetARouteTableAssociation1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref "publicSubnet1"
      RouteTableId: !Ref "publicRouteTable"


  subnetARouteTableAssociation2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref "privateSubnet1"
      RouteTableId: !Ref "privateRouteTable"


  subnetARouteTableAssociation3:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref "privateSubnet2"
      RouteTableId: !Ref "privateRouteTable"


  subnetARouteTableAssociation4:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref "privateSubnet3"
      RouteTableId: !Ref "privateRouteTable"




Outputs:
  vpcId:
    Value: !Ref "vpc"
    Description: "VPC ID"


  publicSubnetId1:
    Value: !Ref "publicSubnet1"
    Description: "Public Subnet ID"


  privateSubnetId1:
    Value: !Ref "privateSubnet1"
    Description: "Public Subnet ID"


  privateSubnetId2:
    Value: !Ref "privateSubnet2"
    Description: "Public Subnet ID"


  privateSubnetId3:
    Value: !Ref "privateSubnet3"
    Description: "Public Subnet ID"
